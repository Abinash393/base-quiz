{"version":3,"sources":["types/index.js","actions/index.js","components/authentication/Auth.jsx","components/admin/AdminHeader.jsx","components/admin/CreateQuiz.jsx","components/user/Header.jsx","components/user/ShowQuiz.jsx","components/user/Setting.jsx","components/admin/ListQuizCreated.jsx","components/admin/QuizEdit.jsx","components/admin/QuizsetEdit.jsx","components/admin/CreateQuizset.jsx","components/admin/ListQuizset.jsx","components/user/Scoreboard.jsx","components/authentication/FourOFour.jsx","components/user/showQuizset.jsx","components/App.jsx","reducers/quizReducer.js","reducers/userReducer.js","reducers/qsetReducer.js","reducers/rootReducer.js","store/index.js","index.js"],"names":["SET_QUIZZES","SET_USERS","DELETE_QUIZ","INCREASE_MARK","SET_QUIZSET","DEL_QUIZSET","setDeleteQuiz","payload","type","setUsers","fetchQuizzes","dispatch","fetch","then","res","json","quizzes","success","fetchQuizset","Auth","props","handleChange","event","setState","target","name","value","handleRequest","state","email","password","validator","isEmail","viewAuth","username","alert","viewTo","method","headers","body","JSON","stringify","user","err","code","msg","token","localStorage","setItem","history","push","id","displayInput","className","onChange","onClick","src","alt","this","React","Component","connect","withRouter","to","clear","CreateQuiz","setQuizSet","index","quizset_id","allQuizset","_id","quizset","handleSubmit","preventDefault","question","option1","option2","option3","option4","answer","Authorization","authorId","onSubmit","htmlFor","map","val","ind","data-id","key","qset","quizSet","ShowQuiz","fetchQuiz","match","params","quizList","listQuestions","questions","result","forEach","catch","handleMark","Setting","response","parsedData","ListQuizCreated","handleEdit","handleDelete","deleteQuiz","quiz","QuizEdit","QuizsetEdit","data","CreateQuizset","ListQuizset","handleEditQuizset","handleDeleteQuizset","obj","Scoreboard","scoreboard","category","score","outof","date","split","FourOFour","ShowQuizset","handlePlay","AdminRoutes","exact","path","component","UserRoutes","App","location","pathname","INITIAL_STATE","quizReducer","action","filteredQuizzes","filter","mark","userReducer","qsetReducer","console","log","rootReducer","combineReducers","store","createStore","applyMiddleware","thunk","render","document","getElementById"],"mappings":"2OAAaA,EAAc,cAEdC,EAAY,YACZC,EAAc,cACdC,EAAgB,gBAEhBC,EAAc,cACdC,EAAc,cCS3B,SAASC,EAAcC,GACrB,MAAO,CACLC,KAAMN,EACNK,QAASA,GAWN,SAASE,EAASF,GACvB,MAAO,CACLC,KAAMP,EACNM,QAASA,GAIN,SAASG,IACd,OAAO,SAAAC,GACLC,MAAM,mBACHC,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MAAK,SAAAG,GACAA,EAAQC,SACVN,EAjCD,CACLH,KAAMR,EACNO,QA+B0BS,QAsDvB,SAASE,IACd,OAAO,SAAAP,GACLC,MAAM,mBACHC,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MAAK,SAAAC,GACAA,EAAIG,SACNN,EA/ED,CACLH,KAAMJ,EACNG,QA6E0BO,Q,IChGxBK,E,YACJ,WAAYC,GAAQ,IAAD,8BACjB,4CAAMA,KAURC,aAAe,SAAAC,GACb,EAAKC,SAAL,eAAiBD,EAAME,OAAOC,KAAOH,EAAME,OAAOE,SAZjC,EAenBC,cAAgB,WACd,GAAK,EAAKC,MAAMC,OAAU,EAAKD,MAAME,SAIrC,GAAKC,IAAUC,QAAQ,EAAKJ,MAAMC,OAAlC,CAIA,GAA4B,WAAxB,EAAKD,MAAMK,SAAuB,CACpC,IAAK,EAAKL,MAAMM,SAEd,YADAC,MAAM,+BAGRvB,MAAM,WAAD,OAAY,EAAKgB,MAAMQ,QAAU,CACpCC,OAAQ,OACRC,QAAS,CAAE,eAAgB,oBAC3BC,KAAMC,KAAKC,UAAU,CACnBC,KAAM,CACJR,SAAU,EAAKN,MAAMM,SACrBL,MAAO,EAAKD,MAAMC,MAClBC,SAAU,EAAKF,MAAME,cAIxBjB,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MAAK,SAAAC,GACgB,MAAhBA,EAAI6B,IAAIC,MACVT,MAAM,sBAEJrB,EAAI+B,KACNV,MAAMrB,EAAI+B,QAKU,WAAxB,EAAKjB,MAAMK,UACbrB,MAAM,WAAD,OAAY,EAAKgB,MAAMQ,OAAvB,UAAuC,CAC1CC,OAAQ,OACRC,QAAS,CAAE,eAAgB,oBAC3BC,KAAMC,KAAKC,UAAU,CACnBC,KAAM,CACJb,MAAO,EAAKD,MAAMC,MAClBC,SAAU,EAAKF,MAAME,cAIxBjB,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MAAK,SAAAC,GACAA,EAAI+B,KACNV,MAAMrB,EAAI+B,KAER/B,EAAIgC,QACNC,aAAaC,QAAQ,QAASlC,EAAIgC,OAClCC,aAAaC,QAAQ,OAAQ,EAAKpB,MAAMQ,QACxC,EAAKhB,MAAMT,SAASF,EAAS,EAAKmB,MAAMQ,SAEd,WAAtB,EAAKR,MAAMQ,QACb,EAAKhB,MAAM6B,QAAQC,KAAK,kBAGA,UAAtB,EAAKtB,MAAMQ,QACb,EAAKhB,MAAM6B,QAAQC,KAAK,mBAGxBpC,EAAIqC,IACNJ,aAAaC,QAAQ,KAAMlC,EAAIqC,YA5DrChB,MAAM,sBAJNA,MAAM,yBAjBS,EAuFnBiB,aAAe,WACb,OAAQ,EAAKxB,MAAMK,UACjB,IAAK,SACH,OACE,oCACE,yBAAKoB,UAAU,uBACb,4CACA,2BACE5B,KAAK,WACLjB,KAAK,OACL6C,UAAU,cACVC,SAAU,EAAKjC,eAEjB,0BAAMgC,UAAU,kBAElB,yBAAKA,UAAU,uBACb,yCACA,2BACE5B,KAAK,QACLjB,KAAK,QACL6C,UAAU,cACVC,SAAU,EAAKjC,eAEjB,0BAAMgC,UAAU,kBAElB,yBAAKA,UAAU,uBACb,2CACA,2BACE5B,KAAK,WACLjB,KAAK,WACL6C,UAAU,cACVC,SAAU,EAAKjC,eAEjB,0BAAMgC,UAAU,kBAGlB,4BACEA,UAAU,MACVE,QAAS,WACP,EAAK5B,kBAHT,YAWN,IAAK,SACH,OACE,oCACE,yBAAK0B,UAAU,uBACb,yCACA,2BACE5B,KAAK,QACLjB,KAAK,QACL6C,UAAU,cACVC,SAAU,EAAKjC,eAEjB,0BAAMgC,UAAU,kBAElB,yBAAKA,UAAU,uBACb,2CACA,2BACE5B,KAAK,WACLjB,KAAK,WACL6C,UAAU,cACVC,SAAU,EAAKjC,eAEjB,0BAAMgC,UAAU,kBAGlB,4BACEA,UAAU,MACVE,QAAS,WACP,EAAK5B,kBAHT,cA5JR,EAAKC,MAAQ,CACXK,SAAU,SACVG,OAAQ,QACRF,SAAU,GACVJ,SAAU,GACVD,MAAO,IAPQ,E,sEA8KT,IAAD,OACP,OACE,oCACE,yBAAKwB,UAAU,kBACb,yBAAKA,UAAU,WACb,yBAAKA,UAAU,aACb,0BAAMA,UAAU,uBACd,wBAAIA,UAAU,aAAd,QACA,wBAAIA,UAAU,aAAd,SAEF,uBAAGA,UAAU,oBAAb,oDAGA,yBACEG,IAAI,iCACJC,IAAI,SACJJ,UAAU,gBAId,yBAAKA,UAAU,cACb,yBAAKA,UAAU,mBACb,0BACEE,QAAS,WACP,EAAKhC,SAAS,CAAEa,OAAQ,WAE1BiB,UACwB,UAAtBK,KAAK9B,MAAMQ,OACP,wCACA,wBAPR,QAYA,0BAAMiB,UAAU,eAAhB,MACA,0BACEE,QAAS,WACP,EAAKhC,SAAS,CAAEa,OAAQ,YAE1BiB,UACwB,WAAtBK,KAAK9B,MAAMQ,OACP,wCACA,wBAPR,UAaF,yBAAKiB,UAAU,kBACb,sCACEA,UAAU,2BACVE,QAAS,WACP,EAAKhC,SAAS,CAAEU,SAAU,aAH9B,YAM4B,WAAxByB,KAAK9B,MAAMK,SACP,4BACA,YARR,WAaA,0BAAMoB,UAAU,eAAhB,MACA,sCACEA,UAAU,WACVE,QAAS,WACP,EAAKhC,SAAS,CAAEU,SAAU,aAH9B,YAM4B,WAAxByB,KAAK9B,MAAMK,SACP,4BACA,YARR,YAcF,yBAAKoB,UAAU,mBAAmBK,KAAKN,wB,GA5PlCO,IAAMC,WAyQVC,mBAJf,SAAyBjC,GACvB,OAAOA,EAAMc,OAGAmB,CAAyBC,YAAW3C,ICrPpC2C,mBAxBf,SAAqB1C,GAMnB,OACE,gCACE,yBAAKiC,UAAU,4BACb,0BAAMA,UAAU,aAAhB,QACA,yBAAKA,UAAU,gBACb,kBAAC,IAAD,CAAMU,GAAG,kBAAT,aACA,kBAAC,IAAD,CAAMA,GAAG,sBAAT,eACA,kBAAC,IAAD,CAAMA,GAAG,mBAAT,gBACA,kBAAC,IAAD,CAAMA,GAAG,sBAAT,kBACA,4BAAQV,UAAU,MAAME,QAdhC,WACER,aAAaiB,QACb5C,EAAM6B,QAAQC,KAAK,WAYb,gBCXJe,E,YACJ,WAAY7C,GAAQ,IAAD,8BACjB,4CAAMA,KAQRC,aAAe,SAAAC,GACb,EAAKC,SAAL,eAAiBD,EAAME,OAAOC,KAAOH,EAAME,OAAOE,SAVjC,EAanBwC,WAAa,SAAA5C,GACX,IAAI6C,EAAQ7C,EAAME,OAAOE,MACzB,EAAKH,SAAS,CACZ6C,WAAY,EAAKhD,MAAMiD,WAAWF,GAAOG,IACzCC,QAAS,EAAKnD,MAAMiD,WAAWF,GAAO1C,QAjBvB,EAqBnB+C,aAAe,SAAAlD,GACbA,EAAMmD,iBAGH,EAAK7C,MAAM8C,UACX,EAAK9C,MAAM+C,SACX,EAAK/C,MAAMgD,SACX,EAAKhD,MAAMiD,SACX,EAAKjD,MAAMkD,SACX,EAAKlD,MAAM2C,SACX,EAAK3C,MAAMwC,YACX,EAAKxC,MAAMmD,OAMdnE,MAAM,kBAAmB,CACvByB,OAAQ,OACRC,QAAS,CACP,eAAgB,mBAChB0C,cAAejC,aAAaD,OAE9BP,KAAMC,KAAKC,UAAU,CACnBiC,SAAU,EAAK9C,MAAM8C,SACrBH,QAAS,EAAK3C,MAAM2C,QACpBH,WAAY,EAAKxC,MAAMwC,WACvBO,QAAS,EAAK/C,MAAM+C,QACpBC,QAAS,EAAKhD,MAAMgD,QACpBC,QAAS,EAAKjD,MAAMiD,QACpBC,QAAS,EAAKlD,MAAMkD,QACpBC,OAAQ,EAAKnD,MAAMmD,OACnBE,SAAUlC,aAAaI,OAIxBtC,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MAAK,SAAAC,GACAA,EAAI+B,KACNV,MAAMrB,EAAI+B,KAGR/B,EAAIG,SACN,EAAKG,MAAM6B,QAAQC,KAAK,qBA9B5Bf,MAAM,yBAhCR,EAAKP,MAAQ,GAFI,E,iFAMjB8B,KAAKtC,MAAMT,SAASO,O,+BAgEpB,OACE,oCACE,kBAAC,EAAD,MACA,yBAAKmC,UAAU,WACb,wBAAIA,UAAU,aAAd,mBAEA,0BAAM6B,SAAUxB,KAAKc,aAAcnB,UAAU,eAC3C,2BAAOA,UAAU,kBAAkB8B,QAAQ,YAA3C,aAGA,2BACE3E,KAAK,OACLiB,KAAK,WACL4B,UAAU,gBACVC,SAAUI,KAAKrC,eAEjB,2BAAOgC,UAAU,kBAAkB8B,QAAQ,WAA3C,YAGA,4BACE1D,KAAK,UACL6B,SAAUI,KAAKQ,WACfb,UAAU,iBAEV,0CACCK,KAAKtC,MAAMiD,WACVX,KAAKtC,MAAMiD,WAAWe,KAAI,SAACC,EAAKC,GAAN,OACxB,4BAAQ5D,MAAO4D,EAAKC,UAASF,EAAIf,IAAKkB,IAAKF,GACxCD,EAAI5D,SAIT,2CAGJ,6BACA,2BAAO4B,UAAU,kBAAkB8B,QAAQ,WAA3C,YAGA,2BACE3E,KAAK,OACLiB,KAAK,UACL4B,UAAU,gBACVC,SAAUI,KAAKrC,eAEjB,2BAAOgC,UAAU,kBAAkB8B,QAAQ,WAA3C,YAGA,2BACE3E,KAAK,OACLiB,KAAK,UACL4B,UAAU,gBACVC,SAAUI,KAAKrC,eAGjB,2BACEgC,UAAU,kBACV8B,QAAQ,UACR7B,SAAUI,KAAKrC,cAHjB,YAOA,2BACEb,KAAK,OACLiB,KAAK,UACL4B,UAAU,gBACVC,SAAUI,KAAKrC,eAEjB,2BAAOgC,UAAU,kBAAkB8B,QAAQ,WAA3C,YAGA,2BACE3E,KAAK,OACLiB,KAAK,UACL4B,UAAU,gBACVC,SAAUI,KAAKrC,eAEjB,2BAAOgC,UAAU,kBAAkB8B,QAAQ,UAA3C,WAIA,4BACE1D,KAAK,SACL6B,SAAUI,KAAKrC,aACfgC,UAAU,iBAEV,4BAAQ3B,MAAOgC,KAAK9B,MAAM+C,SAAUjB,KAAK9B,MAAM+C,SAC/C,4BAAQjD,MAAOgC,KAAK9B,MAAMgD,SAAUlB,KAAK9B,MAAMgD,SAC/C,4BAAQlD,MAAOgC,KAAK9B,MAAMiD,SAAUnB,KAAK9B,MAAMiD,SAC/C,4BAAQnD,MAAOgC,KAAK9B,MAAMkD,SAAUpB,KAAK9B,MAAMkD,UAGjD,4BAAQzB,UAAU,MAAM7C,KAAK,UAA7B,iB,GAnKamD,IAAMC,WAiLhBC,mBAJf,SAAyBjC,GACvB,OAAOA,EAAM6D,KAAKC,UAGL7B,CAAyBC,YAAWG,I,QCpKpCH,mBAjBf,SAAgB1C,GACd,OACE,oCACE,gCACE,yBAAKiC,UAAU,4BACb,0BAAMA,UAAU,aAAhB,QACA,0BAAMA,UAAU,gBACd,kBAAC,IAAD,CAAMU,GAAG,iBAAT,YACA,qCACA,kBAAC,IAAD,CAAMA,GAAG,oBAAT,qB,6jBCNN4B,E,YACJ,aAAe,IAAD,8BACZ,+CAQFC,UAAY,WACVhF,MAAM,2BAA6B,EAAKQ,MAAMyE,MAAMC,OAAO3C,IACxDtC,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MAAK,SAAAC,GACJ,GAAIA,EAAIG,QAAS,CACf,EAAKM,SAAS,CAAEwE,SAAS,YAAKjF,EAAIkF,cAAcC,aAChD,IAAMC,EAAS,GACf,EAAKtE,MAAMmE,SAASI,SAAQ,SAACd,EAAKC,GAChCY,EAAOhD,KAAK,SAEd,EAAK3B,SAAS,CAAE2E,OAAQA,QAG3BE,OAAM,SAAAzD,GAAG,OAAIR,MAAMQ,OAtBV,EAyBd0D,WAAa,SAAChB,EAAKC,GACjB,EAAK1D,MAAMsE,OAAOZ,GAAOD,EACzB,EAAK9D,SAAS,CAAE2E,OAAO,YAAK,EAAKtE,MAAMsE,WA3B3B,EA8Bd1B,aAAe,SAAAlD,GACbV,MAAM,sBAAuB,CAC3ByB,OAAQ,OACRC,QAAS,CACP,eAAgB,mBAChB0C,cAAejC,aAAaD,OAE9BP,KAAMC,KAAKC,UAAL,GACJ2B,WAAY,EAAKhD,MAAMyE,MAAMC,OAAO3C,IACjC,EAAKvB,UAGTf,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MAAK,SAAAC,GACAA,EAAIG,SACN,EAAKG,MAAM6B,QAAQC,KAAK,uBAG3BkD,OAAM,SAAAzD,GAAG,OAAIR,MAAMQ,OA9CtB,EAAKf,MAAQ,CAAEsE,OAAQ,IAFX,E,iFAMZxC,KAAKkC,c,+BA6CG,IAAD,OACP,OACE,oCACE,kBAAC,EAAD,MACA,yBAAKvC,UAAU,WACb,wBAAIA,UAAU,oBAAoBK,KAAKtC,MAAMyE,MAAMC,OAAOrE,MAC1D,yBAAK4B,UAAU,qBACb,yBAAKA,UAAU,aACZK,KAAK9B,MAAMmE,SACVrC,KAAK9B,MAAMmE,SAASX,KAAI,SAACC,EAAKC,GAAN,OACtB,oCACE,yBAAKjC,UAAU,QACb,8BAAOgC,EAAIX,UACX,6BACA,6BACA,4BACEpB,SAAU,SAAAhC,GACR,EAAK+E,WAAW/E,EAAME,OAAOE,MAAO4D,IAEtCjC,UAAU,WAEV,4BAAQA,UAAU,SAAS3B,MAAO2D,EAAIV,SACnCU,EAAIV,SAEP,4BAAQtB,UAAU,SAAS3B,MAAO2D,EAAIT,SACnCS,EAAIT,SAEP,4BAAQvB,UAAU,SAAS3B,MAAO2D,EAAIR,SACnCQ,EAAIR,SAEP,4BAAQxB,UAAU,SAAS3B,MAAO2D,EAAIP,SACnCO,EAAIP,WAIX,iCAIJ,iDAEDpB,KAAK9B,MAAMmE,SACV,4BAAQxC,QAASG,KAAKc,aAAcnB,UAAU,OAA9C,UAIA,W,GAlGOM,IAAMC,WA4GdE,cAAW6B,G,slBC7GpBW,E,YACJ,aAAe,IAAD,8BACZ,+CAIFjF,aAAe,SAAAC,GACb,EAAKC,SAAL,eAAiBD,EAAME,OAAOC,KAAOH,EAAME,OAAOE,SANtC,EASd8C,aAAe,SAAAlD,GACbA,EAAMmD,iBACN7D,MAAM,iBAAmBmC,aAAaI,GAAI,CACxCd,OAAQ,MACRC,QAAS,CACP,eAAgB,mBAChB0C,cAAejC,aAAaD,OAE9BP,KAAMC,KAAKC,UAAU,EAAKb,SAEzBf,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MAAK,SAAAC,GACJqB,MAAMrB,EAAI+B,KACV,EAAKzB,MAAM6B,QAAQC,KAAK,SApB5B,EAAKtB,MAAQ,GAFD,E,mNA2BShB,MAAM,mBAAoB,CAC7CyB,OAAQ,MACRC,QAAS,CACP,eAAgB,mBAChB0C,cAAejC,aAAaD,S,cAJ5ByD,E,gBAQmBA,EAASxF,O,OAA5ByF,E,OACJ9C,KAAKnC,SAAL,KAAkBiF,EAAW9D,O,qIAGrB,IAAD,OACP,OACE,oCACE,kBAAC,EAAD,MACA,yBAAKW,UAAU,6BACb,0BAAM6B,SAAUxB,KAAKc,aAAcnB,UAAU,eAC3C,2BAAOA,UAAU,kBAAkB8B,QAAQ,IAA3C,aAGA,2BACE3E,KAAK,OACLiB,KAAK,WACL6B,SAAUI,KAAKrC,aACfgC,UAAU,gBACV3B,MAAOgC,KAAK9B,MAAMM,WAEpB,2BAAOmB,UAAU,kBAAkB8B,QAAQ,IAA3C,SAGA,2BACE3E,KAAK,QACLiB,KAAK,QACL4B,UAAU,gBACVC,SAAUI,KAAKrC,aACfK,MAAOgC,KAAK9B,MAAMC,QAGpB,4BAAQrB,KAAK,SAAS6C,UAAU,OAAhC,UAGA,4BACEA,UAAU,SACVE,QAAS,WACPR,aAAaiB,QACb,EAAK5C,MAAM6B,QAAQC,KAAK,WAJ5B,iB,GAtEUS,IAAMC,WAsFbE,cAAWwC,GCnFpBG,E,YACJ,WAAYrF,GAAQ,IAAD,8BACjB,4CAAMA,KAIRsF,WAAa,SAAAvD,GACX,EAAK/B,MAAM6B,QAAQC,KAAK,oBAAsBC,IAN7B,EASnBwD,aAAe,SAAAxD,GACb,EAAK/B,MAAMT,SP0CR,SAAoBwC,GACzB,OAAO,SAAAxC,GACLC,MAAM,mBAAD,OAAoBuC,GAAM,CAC7Bd,OAAQ,SACRC,QAAS,CACP,eAAgB,mBAChB0C,cAAejC,aAAaD,SAG7BjC,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MAAK,SAAAC,GACAA,EAAIG,SACNN,EAASL,EAAc6C,QOtDTyD,CAAWzD,KAR/B,EAAKvB,MAAQ,GAFI,E,iFAcjB8B,KAAKtC,MAAMT,SAASD,O,+BAGZ,IAAD,OACP,OACE,oCACE,kBAAC,EAAD,MACA,yBAAK2C,UAAU,WACb,yBAAKA,UAAU,kBACZK,KAAKtC,MAAMJ,QACV0C,KAAKtC,MAAMJ,QAAQoE,KAAI,SAACC,EAAKC,GAAN,OACrB,yBAAKE,IAAKF,EAAKjC,UAAU,QACvB,yBAAKA,UAAU,WAAWgC,EAAId,SAC9B,6BAAMc,EAAIX,UACV,yBAAKrB,UAAU,WACb,0BACEA,UAAU,SACVE,QAAS,WACP,EAAKoD,aAAatB,EAAIf,OAH1B,UAQA,0BACEjB,UAAU,OACVE,QAAS,WACP,EAAKmD,WAAWrB,EAAIf,OAHxB,aAYN,+D,GAlDgBX,IAAMC,WA+DrBC,mBAJf,SAAyBjC,GACvB,OAAOA,EAAMiF,KAAK7F,UAGL6C,CAAyBC,YAAW2C,ICjE7CK,E,YACJ,aAAe,IAAD,8BACZ,+CAYF5C,WAAa,SAAA5C,GACX,IAAI6C,EAAQ7C,EAAME,OAAOE,MACzB,EAAKH,SAAS,CACZ6C,WAAY,EAAKhD,MAAMiD,WAAWF,GAAOG,IACzCC,QAAS,EAAKnD,MAAMiD,WAAWF,GAAO1C,QAjB5B,EAqBd+C,aAAe,SAAAlD,GACbA,EAAMmD,iBACN7D,MAAM,mBAAD,OAAoB,EAAKQ,MAAMyE,MAAMC,OAAO3C,IAAM,CACrDd,OAAQ,MACRC,QAAS,CACP,eAAgB,mBAChB0C,cAAejC,aAAaD,OAE9BP,KAAMC,KAAKC,UAAU,CACnBiC,SAAU,EAAK9C,MAAM8C,SACrBH,QAAS,EAAK3C,MAAM2C,QACpBH,WAAY,EAAKxC,MAAMwC,WACvBO,QAAS,EAAK/C,MAAM+C,QACpBC,QAAS,EAAKhD,MAAMgD,QACpBC,QAAS,EAAKjD,MAAMiD,QACpBC,QAAS,EAAKlD,MAAMkD,QACpBC,OAAQ,EAAKnD,MAAMmD,WAGpBlE,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MAAK,SAAAC,GACAA,EAAI+B,MACNV,MAAMrB,EAAI+B,KACV,EAAKzB,MAAM6B,QAAQC,KAAK,uBA5ClB,EA+Dd7B,aAAe,SAAAC,GACb,EAAKC,SAAL,eAAiBD,EAAME,OAAOC,KAAOH,EAAME,OAAOE,SA9DlD,EAAKE,MAAQ,CACX8C,SAAU,GACVH,QAAS,GACTI,QAAS,GACTC,QAAS,GACTC,QAAS,GACTC,QAAS,GACTC,OAAQ,IATE,E,iFAiDO,IAAD,OAClBrB,KAAKtC,MAAMT,SAASO,KAEpBN,MAAM,mBAAD,OAAoB8C,KAAKtC,MAAMyE,MAAMC,OAAO3C,IAAM,CACrDd,OAAQ,MACRC,QAAS,CACP,eAAgB,mBAChB0C,cAAejC,aAAaD,SAG7BjC,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MAAK,SAAAC,GAAG,OAAI,EAAKS,SAAST,Q,+BAOrB,IAAD,EACP,OACE,yBAAKuC,UAAU,WACb,6BACE,0BAAM6B,SAAUxB,KAAKc,aAAcnB,UAAU,eAC3C,2BAAOA,UAAU,kBAAkB8B,QAAQ,YAA3C,aAGA,8BACE9B,UAAU,kBACV7C,KAAK,OACLiB,KAAK,YAHP,0BAIY,iBAJZ,yBAKYiC,KAAKrC,cALjB,sBAMSqC,KAAK9B,MAAM8C,UANpB,IAQA,2BAAOrB,UAAU,kBAAkB8B,QAAQ,WAA3C,YAGA,4BACE1D,KAAK,UACL6B,SAAUI,KAAKrC,aACfgC,UAAU,gBACV3B,MAAOgC,KAAK9B,MAAM2C,SAEjBb,KAAKtC,MAAMiD,WACVX,KAAKtC,MAAMiD,WAAWe,KAAI,SAACC,EAAKC,GAAN,OACxB,4BAAQ5D,MAAO4D,EAAKC,UAASF,EAAIf,IAAKkB,IAAKF,GACxCD,EAAI5D,SAIT,2CAGJ,6BACA,2BAAO4B,UAAU,kBAAkB8B,QAAQ,WAA3C,YAGA,2BACE3E,KAAK,OACLiB,KAAK,UACL4B,UAAU,gBACVC,SAAUI,KAAKrC,aACfK,MAAOgC,KAAK9B,MAAM+C,UAEpB,2BAAOtB,UAAU,kBAAkB8B,QAAQ,WAA3C,YAGA,2BACE3E,KAAK,OACLiB,KAAK,UACL4B,UAAU,gBACVC,SAAUI,KAAKrC,aACfK,MAAOgC,KAAK9B,MAAMgD,UAGpB,2BACEvB,UAAU,kBACV8B,QAAQ,UACR7B,SAAUI,KAAKrC,cAHjB,YAOA,2BACEb,KAAK,OACLiB,KAAK,UACL4B,UAAU,gBACVC,SAAUI,KAAKrC,aACfK,MAAOgC,KAAK9B,MAAMiD,UAEpB,2BAAOxB,UAAU,kBAAkB8B,QAAQ,WAA3C,YAGA,2BACE3E,KAAK,OACLiB,KAAK,UACL4B,UAAU,gBACVC,SAAUI,KAAKrC,aACfK,MAAOgC,KAAK9B,MAAMkD,UAEpB,2BAAOzB,UAAU,kBAAkB8B,QAAQ,UAA3C,WAGA,2BACE3E,KAAK,OACLiB,KAAK,SACL4B,UAAU,gBACVC,SAAUI,KAAKrC,aACfK,MAAOgC,KAAK9B,MAAMmD,SAEpB,4BAAQ1B,UAAU,MAAM7C,KAAK,UAA7B,iB,GA/JWmD,IAAMC,WA6KdC,mBAJf,SAAyBjC,GACvB,OAAOA,EAAM6D,KAAKC,UAGL7B,CAAyBC,YAAWgD,IC9K7CC,E,YACJ,WAAY3F,GAAQ,IAAD,8BACjB,+CAIFoD,aAAe,SAAAwC,KAHb,EAAKpF,MAAQ,CAAC8D,QAAQ,IAFL,E,sEAUjB,OACE,oCACE,kBAAC,EAAD,MACA,yBAAKrC,UAAU,WACb,wBAAIA,UAAU,aAAd,uBACA,yBAAKA,UAAU,eACb,2BAAO8B,QAAQ,GAAG9B,UAAU,mBACzB,WAAaK,KAAKtC,MAAMyE,MAAMC,OAAO3C,GAAK,OAE7C,2BACE3C,KAAK,OACLiB,KAAK,UACL6B,SAAUI,KAAKrC,aACfgC,UAAU,kBAEZ,4BAAQA,UAAU,aAAaE,QAASG,KAAKc,cAA7C,iB,GA1Bcb,IAAMC,WAoCjBE,cAAWiD,GCpCpBE,E,YACJ,aAAe,IAAD,8BACZ,+CAIF5F,aAAe,SAAAC,GACb,EAAKC,SAAL,eAAiBD,EAAME,OAAOC,KAAOH,EAAME,OAAOE,SANtC,EASd8C,aAAe,SAAAlD,GACbV,MAAM,kBAAmB,CACvByB,OAAQ,OACRC,QAAS,CACP,eAAgB,mBAChB0C,cAAejC,aAAaD,OAE9BP,KAAMC,KAAKC,UAAU,CACnBhB,KAAM,EAAKG,MAAMH,SAGlBZ,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MAAK,SAAAC,GACAA,EAAIG,UACNkB,MAAMrB,EAAI+B,KACV,EAAKzB,MAAM6B,QAAQC,KAAK,wBAtB9B,EAAKtB,MAAQ,CAAE2C,QAAS,IAFZ,E,sEA8BZ,OACE,oCACE,kBAAC,EAAD,MACA,yBAAKlB,UAAU,WACb,wBAAIA,UAAU,aAAd,uBACA,yBAAKA,UAAU,eACb,2BAAO8B,QAAQ,GAAG9B,UAAU,mBAA5B,kBAGA,2BACE7C,KAAK,OACLiB,KAAK,OACL6B,SAAUI,KAAKrC,aACfgC,UAAU,kBAEZ,4BAAQA,UAAU,aAAaE,QAASG,KAAKc,cAA7C,iB,GA9CgBb,IAAMC,WAuDnBE,cAAWmD,GCtDpBC,E,YACJ,WAAY9F,GAAQ,IAAD,8BACjB,4CAAMA,KAQR+F,kBAAoB,SAAA1F,GAClB,EAAKL,MAAM6B,QAAQC,KAAK,uBAAyBzB,IAVhC,EAanB2F,oBAAsB,SAAA3F,KAXpB,EAAKG,MAAQ,GAFI,E,iFAMjB8B,KAAKtC,MAAMT,SAASO,O,+BAUpB,OACE,oCACE,kBAAC,EAAD,MACA,yBAAKmC,UAAU,WACb,6BACGK,KAAKtC,MAAMiD,WACVX,KAAKtC,MAAMiD,WAAWe,KAAI,SAAAiC,GAAG,OAC3B,yBAAKhE,UAAU,qBACb,0BAAMA,UAAU,gBAAgBgE,EAAI5F,MACpC,mCAqBJ,qD,GA/CYkC,IAAMC,WA4DjBC,oBAJf,SAAyBjC,GACvB,OAAOA,EAAM6D,KAAKC,UAGL7B,CAAyBC,YAAWoD,IC0BpCI,G,YAxFb,aAAe,IAAD,8BACZ,+CACK1F,MAAQ,GAFD,E,iFAKO,IAAD,OAClBhB,MAAM,sBAAuB,CAC3ByB,OAAQ,MACRC,QAAS,CACP,eAAgB,mBAChB0C,cAAejC,aAAaD,SAG7BjC,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MAAK,SAAAC,GACAA,EAAIG,SACN,EAAKM,SAAS,CAAEyF,KAAMlG,EAAIyG,WAAWA,kB,+BAM3C,OACE,oCACE,kBAAC,EAAD,MACA,yBAAKlE,UAAU,WACb,wBAAIA,UAAU,oBAAd,cACA,6BACA,6BACA,yBAAKA,UAAU,mBACb,8BACE,yBAAKA,UAAU,cAAf,YACCK,KAAK9B,MAAMoF,KACVtD,KAAK9B,MAAMoF,KAAK5B,KAAI,SAACC,EAAKC,GAAN,OAClB,yBAAKjC,UAAU,aAAamC,IAAKF,GAC9BD,EAAImC,aAIT,kDAIJ,8BACE,yBAAKnE,UAAU,cAAf,SACCK,KAAK9B,MAAMoF,KACVtD,KAAK9B,MAAMoF,KAAK5B,KAAI,SAACC,EAAKC,GAAN,OAClB,yBAAKjC,UAAU,aAAamC,IAAKF,GAC9BD,EAAIoC,UAIT,kDAIJ,8BACE,yBAAKpE,UAAU,cAAf,UACCK,KAAK9B,MAAMoF,KACVtD,KAAK9B,MAAMoF,KAAK5B,KAAI,SAACC,EAAKC,GAAN,OAClB,yBAAKjC,UAAU,aAAamC,IAAKF,GAC9BD,EAAIqC,UAIT,kDAIJ,8BACE,yBAAKrE,UAAU,cAAf,QACCK,KAAK9B,MAAMoF,KACVtD,KAAK9B,MAAMoF,KAAK5B,KAAI,SAACC,EAAKC,GAAN,OAClB,yBAAKjC,UAAU,aAAamC,IAAKF,GAC9BD,EAAIsC,KAAKC,MAAM,KAAK,OAIzB,yD,GA/ESjE,IAAMC,WCmBhBiE,OAnBf,SAAmB/B,GACjB,OACE,4BAAQzC,UAAU,WAChB,yBACEG,IAAI,mCACJC,IAAI,YACJJ,UAAU,eAEZ,wBAAIA,UAAU,kBAAd,OACA,wBAAIA,UAAU,kBAAd,cACA,yBAAKA,UAAU,iBACb,kBAAC,IAAD,CAAMU,GAAG,QAAQV,UAAU,aACzB,0BAAMA,UAAU,kBAAkB,IAAlC,qBCRJyE,G,YACJ,aAAe,IAAD,8BACZ,+CAQFC,WAAa,SAACtG,EAAM0B,GAClB,EAAK/B,MAAM6B,QAAQC,KAAK,iBAAmBzB,EAAO,IAAM0B,IARxD,EAAKvB,MAAQ,GAFD,E,iFAMZ8B,KAAKtC,MAAMT,SAASO,O,+BAOZ,IAAD,OACP,OACE,oCACE,kBAAC,EAAD,MACA,yBAAKmC,UAAU,WACb,yBAAKA,UAAU,qBACZK,KAAKtC,MAAMiD,WACVX,KAAKtC,MAAMiD,WAAWe,KAAI,SAAAiC,GAAG,OAC3B,yBAAKhE,UAAU,qBACb,0BAAMA,UAAU,gBAAgBgE,EAAI5F,MACpC,8BACE,4BACE4B,UAAU,SACVE,QAAS,WACP,EAAKwE,WAAWV,EAAI5F,KAAM4F,EAAI/C,OAHlC,gBAYN,qD,GArCYX,IAAMC,WAkDjBC,oBAJf,SAAyBjC,GACvB,OAAOA,EAAM6D,KAAKC,UAGL7B,CAAyBC,YAAWgE,KCxCnD,SAASE,KACP,OACE,oCACE,kBAAC,IAAD,CAAOC,OAAK,EAACC,KAAK,iBAAiBC,UAAW1B,IAC9C,kBAAC,IAAD,CAAOwB,OAAK,EAACC,KAAK,qBAAqBC,UAAWlE,IAClD,kBAAC,IAAD,CAAOgE,OAAK,EAACC,KAAK,qBAAqBC,UAAWlE,IAClD,kBAAC,IAAD,CAAOgE,OAAK,EAACC,KAAK,uBAAuBC,UAAWrB,IACpD,kBAAC,IAAD,CAAOmB,OAAK,EAACC,KAAK,qBAAqBC,UAAWlB,IAClD,kBAAC,IAAD,CAAOgB,OAAK,EAACC,KAAK,kBAAkBC,UAAWjB,KAC/C,kBAAC,IAAD,CAAOe,OAAK,EAACC,KAAK,0BAA0BC,UAAWpB,KAK7D,SAASqB,KACP,OACE,oCACE,kBAAC,IAAD,CAAOH,OAAK,EAACC,KAAK,0BAA0BC,UAAWxC,IACvD,kBAAC,IAAD,CAAOsC,OAAK,EAACC,KAAK,iBAAiBC,UAAWL,KAC9C,kBAAC,IAAD,CAAOG,OAAK,EAACC,KAAK,mBAAmBC,UAAWb,KAChD,kBAAC,IAAD,CAAOW,OAAK,EAACC,KAAK,gBAAgBC,UAAW7B,K,IAK7C+B,G,YACJ,aAAe,IAAD,8BACZ,+CACKzG,MAAQ,GAFD,E,sEAMZ,OACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOqG,OAAK,EAACC,KAAK,QAAQC,UAAWhH,IAEd,WAAtB4B,aAAaL,KACZ,kBAACsF,GAAD,MACwB,UAAtBjF,aAAaL,KACf,kBAAC0F,GAAD,MACsB,OAApB1E,KAAKtC,MAAMsB,MAAiD,KAAhCgB,KAAKtC,MAAMkH,SAASC,SAClD,kBAAC,EAAD,MAEA,kBAAC,GAAD,W,GAlBQ5E,IAAMC,WA4BTC,oBAJf,SAAyBjC,GACvB,OAAOA,EAAMc,OAGAmB,CAAyBC,YAAWuE,K,+kBCpEnD,IAAIG,GAAgB,CAClBxH,QAAS,MA4BIyH,OAzBf,WAAqD,IAAhC7G,EAA+B,uDAAvB4G,GAAeE,EAAQ,uCAClD,OAAQA,EAAOlI,MACb,KAAKR,EACH,OAAO,MACF4B,EADL,CAEEZ,QAAS0H,EAAOnI,UAGpB,KAAKL,EACH,IAAMyI,EAAkB/G,EAAMZ,QAAQA,QAAQ4H,QAAO,SAAAvD,GACnD,GAAMA,EAAIf,MAAQoE,EAAOnI,QACvB,OAAO8E,KAIX,OAAO,MACFzD,EADL,CAEEZ,QAAS,CAAEA,QAAS2H,KAGxB,QACE,OAAO/G,I,6jBCzBb,IAAI4G,GAAgB,CAClB9F,KAAM,KACNmG,KAAM,GAqBOC,OAlBf,WAAqD,IAAhClH,EAA+B,uDAAvB4G,GAAeE,EAAQ,uCAClD,OAAQA,EAAOlI,MACb,KAAKP,EACH,OAAO,MACF2B,EADL,CAEEc,KAAMgG,EAAOnI,UAGjB,KAAKJ,EAEH,OADAyB,EAAMiH,OAASjH,EAAMiH,KACd,MACFjH,GAEP,QACE,OAAOA,I,6jBCnBb,IAAI4G,GAAgB,CAClB9C,QAAS,MAsBIqD,OAnBf,WAAqD,IAAhCnH,EAA+B,uDAAvB4G,GAAeE,EAAQ,uCAClD,OAAQA,EAAOlI,MACb,KAAKJ,EAEH,OADA4I,QAAQC,IAAIP,EAAOnI,SACZ,MACFqB,EADL,CAEE8D,QAASgD,EAAOnI,UAGpB,KAAKF,EACH,OAAO,MACFuB,GAGP,QACE,OAAOA,ICfAsH,GAAcC,aAAgB,CACzCtC,KAAM4B,GACN/F,KAAMoG,GACNrD,KAAMsD,KCCOK,GALDC,aACZH,GACAI,aAAgBC,O,OCGlBC,iBACE,kBAAC,IAAD,CAAUJ,MAAOA,IACf,kBAAC,IAAD,KACE,kBAAC,GAAD,QAGJK,SAASC,eAAe,U","file":"static/js/main.553d57d8.chunk.js","sourcesContent":["export const SET_QUIZZES = 'SET_QUIZZES'\nexport const SET_ADMINS = 'SET_ADMINS'\nexport const SET_USERS = 'SET_USERS'\nexport const DELETE_QUIZ = 'DELETE_QUIZ'\nexport const INCREASE_MARK = 'INCREASE_MARK'\n\nexport const SET_QUIZSET = \"SET_QUIZSET\"\nexport const DEL_QUIZSET = \"DEL_QUIZSET\"","import {\n  SET_QUIZZES,\n  SET_USERS,\n  DELETE_QUIZ,\n  INCREASE_MARK,\n  SET_QUIZSET,\n  DEL_QUIZSET\n} from '../types/index'\n\nfunction setQuizzes(payload) {\n  return {\n    type: SET_QUIZZES,\n    payload: payload\n  }\n}\n\nfunction setDeleteQuiz(payload) {\n  return {\n    type: DELETE_QUIZ,\n    payload: payload\n  }\n}\n\nfunction setQuizset(payload) {\n  return {\n    type: SET_QUIZSET,\n    payload: payload\n  }\n}\n\nexport function setUsers(payload) {\n  return {\n    type: SET_USERS,\n    payload: payload\n  }\n}\n\nexport function fetchQuizzes() {\n  return dispatch => {\n    fetch('/api/v1/quizzes')\n      .then(res => res.json())\n      .then(quizzes => {\n        if (quizzes.success) {\n          dispatch(setQuizzes(quizzes))\n        }\n      })\n  }\n}\n\nexport function fetchUsers() {\n  return dispatch => {\n    fetch('/api/v1/users/me')\n      .then(res => res.json())\n      .then(users => {\n        if (users.success) {\n          dispatch(setUsers(users))\n        }\n      })\n  }\n}\n\nexport function deleteQuiz(id) {\n  return dispatch => {\n    fetch(`/api/v1/quizzes/${id}`, {\n      method: 'DELETE',\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: localStorage.token\n      }\n    })\n      .then(res => res.json())\n      .then(res => {\n        if (res.success) {\n          dispatch(setDeleteQuiz(id))\n        }\n      })\n  }\n}\n\nexport function deleteQuizset(id) {\n  return dispatch => {\n    fetch(`/api/v1/quizzes/${id}`, {\n      method: 'DELETE',\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: localStorage.token\n      }\n    })\n      .then(res => res.json())\n      .then(res => {\n        if (res.success) {\n          dispatch(setDeleteQuiz(id))\n        }\n      })\n  }\n}\n\nexport function fetchQuizset() {\n  return dispatch => {\n    fetch('/api/v1/quizset')\n      .then(res => res.json())\n      .then(res => {\n        if (res.success) {\n          dispatch(setQuizset(res))\n        }\n      })\n  }\n}\n","import React from 'react'\nimport { withRouter } from 'react-router-dom'\nimport { connect } from 'react-redux'\nimport validator from 'validator'\n\nimport { setUsers } from '../../actions'\n\nclass Auth extends React.Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      viewAuth: 'signin',\n      viewTo: 'users',\n      username: '',\n      password: '',\n      email: ''\n    }\n  }\n\n  handleChange = event => {\n    this.setState({ [event.target.name]: event.target.value })\n  }\n\n  handleRequest = () => {\n    if (!this.state.email || !this.state.password) {\n      alert('Please Fill The Form')\n      return\n    }\n    if (!validator.isEmail(this.state.email)) {\n      alert('Invalid Email')\n      return\n    }\n    if (this.state.viewAuth === 'signup') {\n      if (!this.state.username) {\n        alert('Please Enter Your Full Name')\n        return\n      }\n      fetch(`/api/v1/${this.state.viewTo}`, {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify({\n          user: {\n            username: this.state.username,\n            email: this.state.email,\n            password: this.state.password\n          }\n        })\n      })\n        .then(res => res.json())\n        .then(res => {\n          if (res.err.code == 11000) {\n            alert('User Already Exist')\n          }\n          if (res.msg) {\n            alert(res.msg)\n          }\n        })\n    }\n\n    if (this.state.viewAuth === 'signin') {\n      fetch(`/api/v1/${this.state.viewTo}/login`, {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify({\n          user: {\n            email: this.state.email,\n            password: this.state.password\n          }\n        })\n      })\n        .then(res => res.json())\n        .then(res => {\n          if (res.msg) {\n            alert(res.msg)\n          }\n          if (res.token) {\n            localStorage.setItem('token', res.token)\n            localStorage.setItem('user', this.state.viewTo)\n            this.props.dispatch(setUsers(this.state.viewTo))\n\n            if (this.state.viewTo === 'admins') {\n              this.props.history.push('/admin/quizzes')\n            }\n\n            if (this.state.viewTo === 'users') {\n              this.props.history.push('/user/quizsets')\n            }\n          }\n          if (res.id) {\n            localStorage.setItem('id', res.id)\n          }\n        })\n    }\n  }\n\n  displayInput = () => {\n    switch (this.state.viewAuth) {\n      case 'signup':\n        return (\n          <>\n            <div className='input-effect col-3 '>\n              <label>Full Name</label>\n              <input\n                name='username'\n                type='text'\n                className='style-input'\n                onChange={this.handleChange}\n              />\n              <span className='focus-border'></span>\n            </div>\n            <div className='input-effect col-3 '>\n              <label>E-Mail</label>\n              <input\n                name='email'\n                type='email'\n                className='style-input'\n                onChange={this.handleChange}\n              />\n              <span className='focus-border'></span>\n            </div>\n            <div className='input-effect col-3 '>\n              <label>Password</label>\n              <input\n                name='password'\n                type='password'\n                className='style-input'\n                onChange={this.handleChange}\n              />\n              <span className='focus-border'></span>\n            </div>\n\n            <button\n              className='btn'\n              onClick={() => {\n                this.handleRequest()\n              }}\n            >\n              Sign Up\n            </button>\n          </>\n        )\n\n      case 'signin':\n        return (\n          <>\n            <div className='input-effect col-3 '>\n              <label>E-Mail</label>\n              <input\n                name='email'\n                type='email'\n                className='style-input'\n                onChange={this.handleChange}\n              />\n              <span className='focus-border'></span>\n            </div>\n            <div className='input-effect col-3 '>\n              <label>Password</label>\n              <input\n                name='password'\n                type='password'\n                className='style-input'\n                onChange={this.handleChange}\n              />\n              <span className='focus-border'></span>\n            </div>\n\n            <button\n              className='btn'\n              onClick={() => {\n                this.handleRequest()\n              }}\n            >\n              Sign In\n            </button>\n          </>\n        )\n\n      default:\n        break\n    }\n  }\n\n  render() {\n    return (\n      <>\n        <div className='auth-container'>\n          <div className='wrapper'>\n            <div className='left-auth'>\n              <span className='base-quiz-text-area'>\n                <h2 className='base-text'>Base</h2>\n                <h2 className='quiz-text'>QUIZ</h2>\n              </span>\n              <p className='a-fun-place-text'>\n                A fun place to create quiz and learn new things.\n              </p>\n              <img\n                src='media/undraw_studying_s3l7.svg'\n                alt='vector'\n                className='vector-img'\n              />\n            </div>\n            {/* right side area */}\n            <div className='right-auth'>\n              <div className='user-admin-area'>\n                <span\n                  onClick={() => {\n                    this.setState({ viewTo: 'users' })\n                  }}\n                  className={\n                    this.state.viewTo === 'users'\n                      ? 'user-admin-area-span active-underline'\n                      : 'user-admin-area-span'\n                  }\n                >\n                  User\n                </span>\n                <span className='big-text or'>or</span>\n                <span\n                  onClick={() => {\n                    this.setState({ viewTo: 'admins' })\n                  }}\n                  className={\n                    this.state.viewTo === 'admins'\n                      ? 'user-admin-area-span active-underline'\n                      : 'user-admin-area-span'\n                  }\n                >\n                  Admin\n                </span>\n              </div>\n              <div className='btn-class-area'>\n                <span\n                  className='big-text big-text-active'\n                  onClick={() => {\n                    this.setState({ viewAuth: 'signin' })\n                  }}\n                  className={\n                    this.state.viewAuth === 'signin'\n                      ? 'big-text active-underline'\n                      : 'big-text'\n                  }\n                >\n                  Sign In\n                </span>\n                <span className='big-text or'>or</span>\n                <span\n                  className='big-text'\n                  onClick={() => {\n                    this.setState({ viewAuth: 'signup' })\n                  }}\n                  className={\n                    this.state.viewAuth === 'signup'\n                      ? 'big-text active-underline'\n                      : 'big-text'\n                  }\n                >\n                  Sign Up\n                </span>\n              </div>\n              <div className='input-container'>{this.displayInput()}</div>\n            </div>\n          </div>\n        </div>\n      </>\n    )\n  }\n}\n\nfunction mapStateToProps(state) {\n  return state.user\n}\n\nexport default connect(mapStateToProps)(withRouter(Auth))\n","import React from 'react'\nimport { withRouter, Link } from 'react-router-dom'\n\nfunction AdminHeader(props) {\n  function handleLogout() {\n    localStorage.clear()\n    props.history.push('/auth')\n  }\n  \n  return (\n    <header>\n      <div className='wrapper header-container'>\n        <span className='quiz-text'>Quiz</span>\n        <nav className='setting-link'>\n          <Link to='/admin/quizzes'>Quiz List</Link>\n          <Link to='/admin/quiz/create'>Create Quiz</Link>\n          <Link to='/admin/quizsets'>Quizset List</Link>\n          <Link to='/admin/quizset/new'>Create Quizset</Link>\n          <button className='lgt' onClick={handleLogout}>\n            Logout\n          </button>\n        </nav>\n      </div>\n    </header>\n  )\n}\n\nexport default withRouter(AdminHeader)\n","import React from 'react'\nimport { withRouter } from 'react-router-dom'\nimport { connect } from 'react-redux'\n\nimport AdminHeader from './AdminHeader'\nimport { fetchQuizset } from '../../actions'\n\nclass CreateQuiz extends React.Component {\n  constructor(props) {\n    super(props)\n    this.state = {}\n  }\n\n  componentDidMount() {\n    this.props.dispatch(fetchQuizset())\n  }\n\n  handleChange = event => {\n    this.setState({ [event.target.name]: event.target.value })\n  }\n\n  setQuizSet = event => {\n    let index = event.target.value\n    this.setState({\n      quizset_id: this.props.allQuizset[index]._id,\n      quizset: this.props.allQuizset[index].name\n    })\n  }\n\n  handleSubmit = event => {\n    event.preventDefault()\n\n    if (\n      !this.state.question ||\n      !this.state.option1 ||\n      !this.state.option2 ||\n      !this.state.option3 ||\n      !this.state.option4 ||\n      !this.state.quizset||\n      !this.state.quizset_id||\n      !this.state.answer\n    ) {\n      alert('Please Fill The Form')\n      return\n    }\n\n    fetch(`/api/v1/quizzes`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: localStorage.token\n      },\n      body: JSON.stringify({\n        question: this.state.question,\n        quizset: this.state.quizset,\n        quizset_id: this.state.quizset_id,\n        option1: this.state.option1,\n        option2: this.state.option2,\n        option3: this.state.option3,\n        option4: this.state.option4,\n        answer: this.state.answer,\n        authorId: localStorage.id\n      })\n    })\n    \n      .then(res => res.json())\n      .then(res => {\n        if (res.msg) {\n          alert(res.msg)\n        }\n\n        if (res.success) {\n          this.props.history.push('/admin/quizzes')\n        }\n      })\n  }\n\n  render() {\n    return (\n      <>\n        <AdminHeader />\n        <div className='wrapper'>\n          <h2 className='createnew'>Create New Quiz</h2>\n          {/*  */}\n          <form onSubmit={this.handleSubmit} className='create-quiz'>\n            <label className='crate-new-label' htmlFor='question'>\n              Question:\n            </label>\n            <input\n              type='text'\n              name='question'\n              className='input-classic'\n              onChange={this.handleChange}\n            />\n            <label className='crate-new-label' htmlFor='quizset'>\n              Quizset:\n            </label>\n            <select\n              name='quizset'\n              onChange={this.setQuizSet}\n              className='select-answer'\n            >\n              <option>Select</option>\n              {this.props.allQuizset ? (\n                this.props.allQuizset.map((val, ind) => (\n                  <option value={ind} data-id={val._id} key={ind}>\n                    {val.name}\n                  </option>\n                ))\n              ) : (\n                <option>Select</option>\n              )}\n            </select>\n            <br />\n            <label className='crate-new-label' htmlFor='option1'>\n              Option1:\n            </label>\n            <input\n              type='text'\n              name='option1'\n              className='input-classic'\n              onChange={this.handleChange}\n            />\n            <label className='crate-new-label' htmlFor='option2'>\n              Option2:\n            </label>\n            <input\n              type='text'\n              name='option2'\n              className='input-classic'\n              onChange={this.handleChange}\n            />\n\n            <label\n              className='crate-new-label'\n              htmlFor='option3'\n              onChange={this.handleChange}\n            >\n              Option3:\n            </label>\n            <input\n              type='text'\n              name='option3'\n              className='input-classic'\n              onChange={this.handleChange}\n            />\n            <label className='crate-new-label' htmlFor='option4'>\n              Option4:\n            </label>\n            <input\n              type='text'\n              name='option4'\n              className='input-classic'\n              onChange={this.handleChange}\n            />\n            <label className='crate-new-label' htmlFor='answer'>\n              Answer:\n            </label>\n\n            <select\n              name='answer'\n              onChange={this.handleChange}\n              className='select-answer'\n            >\n              <option value={this.state.option1}>{this.state.option1}</option>\n              <option value={this.state.option2}>{this.state.option2}</option>\n              <option value={this.state.option3}>{this.state.option3}</option>\n              <option value={this.state.option4}>{this.state.option4}</option>\n            </select>\n\n            <button className='btn' type='submit'>\n              Submit\n            </button>\n          </form>\n        </div>\n      </>\n    )\n  }\n}\n\nfunction mapStateToProps(state) {\n  return state.qset.quizSet\n}\n\nexport default connect(mapStateToProps)(withRouter(CreateQuiz))\n","import React from 'react'\nimport { withRouter, Link } from 'react-router-dom'\n\nfunction Header(props) {\n  return (\n    <>\n      <header>\n        <div className='wrapper header-container'>\n          <span className='quiz-text'>Quiz</span>\n          <span className='setting-link'>\n            <Link to='/user/setting'>Settings</Link>\n            <span>   </span>\n            <Link to='/user/scoreboard'>Scoreboard</Link>\n          </span>\n        </div>\n      </header>\n    </>\n  )\n}\n\nexport default withRouter(Header)\n","import React from 'react'\nimport { withRouter } from 'react-router-dom'\nimport { connect } from 'react-redux'\n\nimport Header from './Header'\n\nclass ShowQuiz extends React.Component {\n  constructor() {\n    super()\n    this.state = { result: [] }\n  }\n\n  componentDidMount() {\n    this.fetchQuiz()\n  }\n\n  fetchQuiz = () => {\n    fetch('/api/v1/quizzes/quizset/' + this.props.match.params.id)\n      .then(res => res.json())\n      .then(res => {\n        if (res.success) {\n          this.setState({ quizList: [...res.listQuestions.questions] })\n          const result = []\n          this.state.quizList.forEach((val, ind) => {\n            result.push(null)\n          })\n          this.setState({ result: result })\n        }\n      })\n      .catch(err => alert(err))\n  }\n\n  handleMark = (val, ind) => {\n    this.state.result[ind] = val\n    this.setState({ result: [...this.state.result] })\n  }\n\n  handleSubmit = event => {\n    fetch('/api/v1/users/score', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: localStorage.token\n      },\n      body: JSON.stringify({\n        quizset_id: this.props.match.params.id,\n        ...this.state\n      })\n    })\n      .then(res => res.json())\n      .then(res => {\n        if (res.success) {\n          this.props.history.push('/user/scoreboard')\n        }\n      })\n      .catch(err => alert(err))\n  }\n\n  render() {\n    return (\n      <>\n        <Header />\n        <div className='wrapper'>\n          <h2 className='quizset-text-top'>{this.props.match.params.name}</h2>\n          <div className='quizzes-container'>\n            <div className='quiz-card'>\n              {this.state.quizList ? (\n                this.state.quizList.map((val, ind) => (\n                  <>\n                    <div className='card'>\n                      <span>{val.question}</span>\n                      <br />\n                      <br />\n                      <select\n                        onChange={event => {\n                          this.handleMark(event.target.value, ind)\n                        }}\n                        className='quizset'\n                      >\n                        <option className='select' value={val.option1}>\n                          {val.option1}\n                        </option>\n                        <option className='select' value={val.option2}>\n                          {val.option2}\n                        </option>\n                        <option className='select' value={val.option3}>\n                          {val.option3}\n                        </option>\n                        <option className='select' value={val.option4}>\n                          {val.option4}\n                        </option>\n                      </select>\n                    </div>\n                    <br />\n                  </>\n                ))\n              ) : (\n                <center>No Quiz Found</center>\n              )}\n              {this.state.quizList ? (\n                <button onClick={this.handleSubmit} className='btn'>\n                  Submit\n                </button>\n              ) : (\n                ''\n              )}\n            </div>\n          </div>\n        </div>\n      </>\n    )\n  }\n}\n\nexport default withRouter(ShowQuiz)\n","import React from 'react'\nimport { withRouter } from 'react-router-dom'\n\nimport Header from './Header'\n\nclass Setting extends React.Component {\n  constructor() {\n    super()\n    this.state = {}\n  }\n\n  handleChange = event => {\n    this.setState({ [event.target.name]: event.target.value })\n  }\n\n  handleSubmit = event => {\n    event.preventDefault()\n    fetch('/api/v1/users/' + localStorage.id, {\n      method: 'PUT',\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: localStorage.token\n      },\n      body: JSON.stringify(this.state)\n    })\n      .then(res => res.json())\n      .then(res => {\n        alert(res.msg)\n        this.props.history.push('/')\n      })\n  }\n\n  async componentDidMount() {\n    let response = await fetch('/api/v1/users/me', {\n      method: 'GET',\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: localStorage.token\n      }\n    });\n\n    let parsedData = await response.json();\n    this.setState({...parsedData.user})\n  }\n\n  render() {\n    return (\n      <>\n        <Header />\n        <div className='wrapper setting-container'>\n          <form onSubmit={this.handleSubmit} className='create-quiz'>\n            <label className='crate-new-label' htmlFor=''>\n              Full Name\n            </label>\n            <input\n              type='text'\n              name='username'\n              onChange={this.handleChange}\n              className='input-classic'\n              value={this.state.username}\n            />\n            <label className='crate-new-label' htmlFor=''>\n              E-mai\n            </label>\n            <input\n              type='email'\n              name='email'\n              className='input-classic'\n              onChange={this.handleChange}\n              value={this.state.email}\n            />                 \n\n            <button type='submit' className='btn'>\n              Update\n            </button>\n            <button\n              className='logout'\n              onClick={() => {\n                localStorage.clear()\n                this.props.history.push('/auth')\n              }}\n            >\n              Logout\n            </button>\n          </form>\n        </div>\n      </>\n    )\n  }\n}\n\nexport default withRouter(Setting)\n","import React from 'react'\nimport { withRouter } from 'react-router-dom'\nimport { connect } from 'react-redux'\n\nimport { fetchQuizzes, deleteQuiz } from '../../actions'\n\nimport AdminHeader from './AdminHeader'\n\nclass ListQuizCreated extends React.Component {\n  constructor(props) {\n    super(props)\n    this.state = {}\n  }\n\n  handleEdit = id => {\n    this.props.history.push('/admin/quiz/edit/' + id)\n  }\n\n  handleDelete = id => {\n    this.props.dispatch(deleteQuiz(id))\n  }\n\n  componentDidMount() {\n    this.props.dispatch(fetchQuizzes())\n  }\n\n  render() {\n    return (\n      <>\n        <AdminHeader />\n        <div className='wrapper'>\n          <div className='main-container'>\n            {this.props.quizzes ? (\n              this.props.quizzes.map((val, ind) => (\n                <div key={ind} className='card'>\n                  <div className='quizset'>{val.quizset}</div>\n                  <div>{val.question}</div>\n                  <div className='btn-div'>\n                    <span\n                      className='delete'\n                      onClick={() => {\n                        this.handleDelete(val._id)\n                      }}\n                    >\n                      Delete\n                    </span>\n                    <span\n                      className='edit'\n                      onClick={() => {\n                        this.handleEdit(val._id)\n                      }}\n                    >\n                      Edit\n                    </span>\n                  </div>\n                </div>\n              ))\n            ) : (\n              <center>\"Nothing To Show...\"</center>\n            )}\n          </div>\n        </div>\n      </>\n    )\n  }\n}\n\nfunction mapStateToProps(state) {\n  return state.quiz.quizzes\n}\n\nexport default connect(mapStateToProps)(withRouter(ListQuizCreated))\n","import React from 'react'\nimport { withRouter } from 'react-router-dom'\nimport { connect } from 'react-redux'\n\nimport { fetchQuizset } from '../../actions'\n\nclass QuizEdit extends React.Component {\n  constructor() {\n    super()\n    this.state = {\n      question: '',\n      quizset: '',\n      option1: '',\n      option2: '',\n      option3: '',\n      option4: '',\n      answer: ''\n    }\n  }\n\n  setQuizSet = event => {\n    let index = event.target.value\n    this.setState({\n      quizset_id: this.props.allQuizset[index]._id,\n      quizset: this.props.allQuizset[index].name\n    })\n  }\n\n  handleSubmit = event => {\n    event.preventDefault()\n    fetch(`/api/v1/quizzes/${this.props.match.params.id}`, {\n      method: 'PUT',\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: localStorage.token\n      },\n      body: JSON.stringify({\n        question: this.state.question,\n        quizset: this.state.quizset,\n        quizset_id: this.state.quizset_id,\n        option1: this.state.option1,\n        option2: this.state.option2,\n        option3: this.state.option3,\n        option4: this.state.option4,\n        answer: this.state.answer\n      })\n    })\n      .then(res => res.json())\n      .then(res => {\n        if (res.msg) {\n          alert(res.msg)\n          this.props.history.push('/admin/quizzes')\n        }\n      })\n  }\n\n  componentDidMount() {\n    this.props.dispatch(fetchQuizset())\n\n    fetch(`/api/v1/quizzes/${this.props.match.params.id}`, {\n      method: 'GET',\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: localStorage.token\n      }\n    })\n      .then(res => res.json())\n      .then(res => this.setState(res))\n  }\n\n  handleChange = event => {\n    this.setState({ [event.target.name]: event.target.value })\n  }\n\n  render() {\n    return (\n      <div className='wrapper'>\n        <div>\n          <form onSubmit={this.handleSubmit} className='create-quiz'>\n            <label className='crate-new-label' htmlFor='question'>\n              Question:\n            </label>\n            <input\n              className='crate-new-label'\n              type='text'\n              name='question'\n              className='input-classic'\n              onChange={this.handleChange}\n              value={this.state.question}\n            />\n            <label className='crate-new-label' htmlFor='quizset'>\n              Quizset:\n            </label>\n            <select\n              name='quizset'\n              onChange={this.handleChange}\n              className='select-answer'\n              value={this.state.quizset}\n            >\n              {this.props.allQuizset ? (\n                this.props.allQuizset.map((val, ind) => (\n                  <option value={ind} data-id={val._id} key={ind}>\n                    {val.name}\n                  </option>\n                ))\n              ) : (\n                <option>Select</option>\n              )}\n            </select>\n            <br />\n            <label className='crate-new-label' htmlFor='option1'>\n              Option1:\n            </label>\n            <input\n              type='text'\n              name='option1'\n              className='input-classic'\n              onChange={this.handleChange}\n              value={this.state.option1}\n            />\n            <label className='crate-new-label' htmlFor='option2'>\n              Option2:\n            </label>\n            <input\n              type='text'\n              name='option2'\n              className='input-classic'\n              onChange={this.handleChange}\n              value={this.state.option2}\n            />\n\n            <label\n              className='crate-new-label'\n              htmlFor='option3'\n              onChange={this.handleChange}\n            >\n              Option3:\n            </label>\n            <input\n              type='text'\n              name='option3'\n              className='input-classic'\n              onChange={this.handleChange}\n              value={this.state.option3}\n            />\n            <label className='crate-new-label' htmlFor='option4'>\n              Option4:\n            </label>\n            <input\n              type='text'\n              name='option4'\n              className='input-classic'\n              onChange={this.handleChange}\n              value={this.state.option4}\n            />\n            <label className='crate-new-label' htmlFor='answer'>\n              Answer:\n            </label>\n            <input\n              type='text'\n              name='answer'\n              className='input-classic'\n              onChange={this.handleChange}\n              value={this.state.answer}\n            />\n            <button className='btn' type='submit'>\n              Submit\n            </button>\n          </form>\n        </div>\n      </div>\n    )\n  }\n}\n\nfunction mapStateToProps(state) {\n  return state.qset.quizSet\n}\n\nexport default connect(mapStateToProps)(withRouter(QuizEdit))\n","import React from 'react'\nimport { withRouter } from 'react-router-dom'\n\nimport AdminHeader from './AdminHeader.jsx'\n\nclass QuizsetEdit extends React.Component {\n  constructor(props) {\n    super()\n    this.state = {quizSet:\"\"}\n  }\n\n  handleSubmit = data => {\n  }\n\n\n  render() {\n    return (\n      <>\n        <AdminHeader />\n        <div className='wrapper'>\n          <h2 className='createnew'>Create New Quiz set</h2>\n          <div className='create-quiz'>\n            <label htmlFor='' className='crate-new-label'>\n              {'Quizset ' + this.props.match.params.id + \" To\"}\n            </label>\n            <input\n              type='text'\n              name='quizSet'\n              onChange={this.handleChange}\n              className='input-classic'\n            />\n            <button className='create-btn' onClick={this.handleSubmit}>\n              Update\n            </button>\n          </div>\n        </div>\n      </>\n    )\n  }\n}\n\nexport default withRouter(QuizsetEdit)\n","import React from 'react'\nimport { withRouter } from 'react-router-dom'\n\nimport AdminHeader from './AdminHeader.jsx'\n\nclass CreateQuizset extends React.Component {\n  constructor() {\n    super()\n    this.state = { quizset: '' }\n  }\n\n  handleChange = event => {\n    this.setState({ [event.target.name]: event.target.value })\n  }\n\n  handleSubmit = event => {\n    fetch(`/api/v1/quizset`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: localStorage.token\n      },\n      body: JSON.stringify({\n        name: this.state.name\n      })\n    })\n      .then(res => res.json())\n      .then(res => {\n        if (res.success) {\n          alert(res.msg)\n          this.props.history.push(\"/admin/quizsets\")\n        }\n      })\n  }\n\n  render() {\n    return (\n      <>\n        <AdminHeader />\n        <div className='wrapper'>\n          <h2 className='createnew'>Create New Quiz set</h2>\n          <div className='create-quiz'>\n            <label htmlFor='' className='crate-new-label'>\n              Quiz Set Name:\n            </label>\n            <input\n              type='text'\n              name='name'\n              onChange={this.handleChange}\n              className='input-classic'\n            />\n            <button className=\"create-btn\" onClick={this.handleSubmit}>Create</button>\n          </div>\n        </div>\n      </>\n    )\n  }\n}\n\n\nexport default withRouter(CreateQuizset)\n","import React from 'react'\nimport { withRouter } from 'react-router-dom'\nimport { connect } from 'react-redux'\nimport { fetchQuizset } from '../../actions'\nimport AdminHeader from './AdminHeader.jsx'\n\nclass ListQuizset extends React.Component {\n  constructor(props) {\n    super(props)\n    this.state = {}\n  }\n\n  componentDidMount() {\n    this.props.dispatch(fetchQuizset())\n  }\n\n  handleEditQuizset = name => {\n    this.props.history.push(\"/admin/quizset/edit/\" + name)\n  }\n\n  handleDeleteQuizset = name => {}\n\n  render() {\n    return (\n      <>\n        <AdminHeader />\n        <div className='wrapper'>\n          <div>\n            {this.props.allQuizset ? (\n              this.props.allQuizset.map(obj => (\n                <div className='card quizset-card'>\n                  <span className='quizset-text'>{obj.name}</span>\n                  <span>\n                    {/* <button\n                      className='delete'\n                      onClick={() => {\n                        this.handleEditQuizset(obj.name)\n                      }}\n                    >\n                      Edit\n                    </button>\n                    <button\n                      className='delete'\n                      onClick={() => {\n                        this.handleDeleteQuizset(obj.name)\n                      }}\n                    >\n                      Delete\n                    </button> */}\n                  </span>\n                </div>\n              ))\n            ) : (\n              <center>Loading...</center>\n            )}\n          </div>\n        </div>\n      </>\n    )\n  }\n}\n\nfunction mapStateToProps(state) {\n  return state.qset.quizSet\n}\n\nexport default connect(mapStateToProps)(withRouter(ListQuizset))\n","import React from 'react'\nimport Header from './Header'\n\nclass Scoreboard extends React.Component {\n  constructor() {\n    super()\n    this.state = {}\n  }\n\n  componentDidMount() {\n    fetch(`/api/v1/users/score`, {\n      method: 'GET',\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: localStorage.token\n      }\n    })\n      .then(res => res.json())\n      .then(res => {\n        if (res.success) {\n          this.setState({ data: res.scoreboard.scoreboard })\n        }\n      })\n  }\n\n  render() {\n    return (\n      <>\n        <Header />\n        <div className='wrapper'>\n          <h1 className='quizset-text-top'>Scoreboard</h1>\n          <br/>\n          <br/>\n          <div className='table-container'>\n            <span>\n              <div className='table-head'>Category</div>\n              {this.state.data ? (\n                this.state.data.map((val, ind) => (\n                  <div className='table-data' key={ind}>\n                    {val.category}\n                  </div>\n                ))\n              ) : (\n                <center>No Data Found</center>\n              )}\n            </span>\n\n            <span>\n              <div className='table-head'>Score</div>\n              {this.state.data ? (\n                this.state.data.map((val, ind) => (\n                  <div className='table-data' key={ind}>\n                    {val.score}\n                  </div>\n                ))\n              ) : (\n                <center>No Data Found</center>\n              )}\n            </span>\n\n            <span>\n              <div className='table-head'>Out Of</div>\n              {this.state.data ? (\n                this.state.data.map((val, ind) => (\n                  <div className='table-data' key={ind}>\n                    {val.outof}\n                  </div>\n                ))\n              ) : (\n                <center>No Data Found</center>\n              )}\n            </span>\n\n            <span>\n              <div className='table-head'>Date</div>\n              {this.state.data ? (\n                this.state.data.map((val, ind) => (\n                  <div className='table-data' key={ind}>\n                    {val.date.split(\"T\")[0]}\n                  </div>\n                ))\n              ) : (\n                <center>No Data Found</center>\n              )}\n            </span>\n          </div>\n        </div>\n      </>\n    )\n  }\n}\n\nexport default Scoreboard\n","import React from 'react'\nimport { Link } from 'react-router-dom'\n\nfunction FourOFour(params) {\n  return (\n    <center className='wrapper'>\n      <img\n        src='/media/undraw_searching_p5ux.svg'\n        alt='not found'\n        className='search-img'\n      />\n      <h2 className='not-found-text'>404</h2>\n      <h2 className='not-found-text'>Not Found!</h2>\n      <div className='btn-container'>\n        <Link to='/auth' className='space-rem'>\n          <span className='not-found-text'>{'<'} Back To Auth</span>\n        </Link>\n      </div>\n    </center>\n  )\n}\n\nexport default FourOFour\n","import React from 'react'\nimport { withRouter } from 'react-router-dom'\nimport { connect } from 'react-redux'\nimport { fetchQuizzes, fetchUsers, fetchQuizset } from '../../actions'\n\nimport Header from './Header'\n\nclass ShowQuizset extends React.Component {\n  constructor() {\n    super()\n    this.state = {}\n  }\n\n  componentDidMount() {\n    this.props.dispatch(fetchQuizset())\n  }\n\n  handlePlay = (name, id) => {\n    this.props.history.push('/user/quizzes/' + name + '/' + id)\n  }\n\n  render() {\n    return (\n      <>\n        <Header />\n        <div className='wrapper'>\n          <div className='quizset-container'>\n            {this.props.allQuizset ? (\n              this.props.allQuizset.map(obj => (\n                <div className='card quizset-card'>\n                  <span className='quizset-text'>{obj.name}</span>\n                  <span>\n                    <button\n                      className='delete'\n                      onClick={() => {\n                        this.handlePlay(obj.name, obj._id)\n                      }}\n                    >\n                      P L A Y\n                    </button>\n                  </span>\n                </div>\n              ))\n            ) : (\n              <center>Loading...</center>\n            )}\n          </div>\n        </div>\n      </>\n    )\n  }\n}\n\nfunction mapStateToProps(state) {\n  return state.qset.quizSet\n}\n\nexport default connect(mapStateToProps)(withRouter(ShowQuizset))\n","import React from 'react'\nimport { withRouter, Route, Switch } from 'react-router-dom'\nimport { connect } from 'react-redux'\n\nimport Auth from './authentication/Auth'\nimport CreateQuiz from './admin/CreateQuiz'\nimport ShowQuiz from './user/ShowQuiz'\nimport Setting from './user/Setting'\nimport ListQuizCreated from './admin/ListQuizCreated'\nimport QuizEdit from './admin/QuizEdit'\nimport QuizsetEdit from \"./admin/QuizsetEdit\"\nimport CreateQuizset from \"./admin/CreateQuizset\"\nimport ListQuizset from \"./admin/ListQuizset\"\nimport Scoreboard from './user/Scoreboard'\nimport FourOFour from './authentication/FourOFour'\nimport ShowQuizset from \"./user/showQuizset\";\n\nfunction AdminRoutes() {\n  return (\n    <>\n      <Route exact path='/admin/quizzes' component={ListQuizCreated} />\n      <Route exact path='/admin/quiz/create' component={CreateQuiz} />\n      <Route exact path='/admin/quiz/update' component={CreateQuiz} />\n      <Route exact path='/admin/quiz/edit/:id' component={QuizEdit} />\n      <Route exact path=\"/admin/quizset/new\" component={CreateQuizset}/>\n      <Route exact path=\"/admin/quizsets\" component={ListQuizset} />\n      <Route exact path=\"/admin/quizset/edit/:id\" component={QuizsetEdit} />\n    </>\n  )\n}\n\nfunction UserRoutes() {\n  return (\n    <>\n      <Route exact path='/user/quizzes/:name/:id' component={ShowQuiz} />\n      <Route exact path='/user/quizsets' component={ShowQuizset} />\n      <Route exact path='/user/scoreboard' component={Scoreboard} />\n      <Route exact path='/user/setting' component={Setting} />\n    </>\n  )\n}\n\nclass App extends React.Component {\n  constructor() {\n    super()\n    this.state = {}\n  }\n\n  render() {\n    return (\n      <Switch>\n        <Route exact path='/auth' component={Auth} />\n\n        {localStorage.user === 'admins' ? (\n          <AdminRoutes />\n        ) : localStorage.user === 'users' ? (\n          <UserRoutes />\n        ) : this.props.user === null && this.props.location.pathname == '/' ? (\n          <Auth />\n        ) : (\n          <FourOFour />\n        )}\n      </Switch>\n    )\n  }\n}\nfunction mapStateToProps(state) {\n  return state.user\n}\n\nexport default connect(mapStateToProps)(withRouter(App))\n","import { SET_QUIZZES, DELETE_QUIZ } from '../types'\n\nlet INITIAL_STATE = {\n  quizzes: null\n}\n\nfunction quizReducer(state = INITIAL_STATE, action) {\n  switch (action.type) {\n    case SET_QUIZZES:\n      return {\n        ...state,\n        quizzes: action.payload\n      }\n\n    case DELETE_QUIZ:\n      const filteredQuizzes = state.quizzes.quizzes.filter(val => {\n        if (!(val._id === action.payload)) {\n          return val\n        }\n      })\n\n      return {\n        ...state,\n        quizzes: { quizzes: filteredQuizzes }\n      }\n\n    default:\n      return state\n  }\n}\n\nexport default quizReducer\n","import { SET_USERS, INCREASE_MARK } from '../types'\n\nlet INITIAL_STATE = {\n  user: null,\n  mark: 0\n}\n\nfunction userReducer(state = INITIAL_STATE, action) {\n  switch (action.type) {\n    case SET_USERS:\n      return {\n        ...state,\n        user: action.payload\n      }\n\n    case INCREASE_MARK:\n      state.mark = ++state.mark\n      return {\n        ...state\n      }\n    default:\n      return state\n  }\n}\n\nexport default userReducer\n","import { SET_QUIZSET, DEL_QUIZSET } from '../types'\n\nlet INITIAL_STATE = {\n  quizSet: null\n}\n\nfunction qsetReducer(state = INITIAL_STATE, action) {\n  switch (action.type) {\n    case SET_QUIZSET:\n      console.log(action.payload)\n      return {\n        ...state,\n        quizSet: action.payload\n      }\n\n    case DEL_QUIZSET:\n      return {\n        ...state\n      }\n\n    default:\n      return state\n  }\n}\n\nexport default qsetReducer\n","import { combineReducers } from 'redux'\n\nimport quizReducer from './quizReducer'\nimport userReducer from './userReducer'\nimport qsetReducer from './qsetReducer'\n\nexport const rootReducer = combineReducers({\n  quiz: quizReducer,\n  user: userReducer,\n  qset: qsetReducer\n})\n","import { createStore, applyMiddleware } from 'redux'\nimport thunk from 'redux-thunk'\nimport reducer from '../reducers/rootReducer'\nimport { rootReducer } from '../reducers/rootReducer'\n\nconst store = createStore(\n  rootReducer,\n  applyMiddleware(thunk)\n)\n\nexport default store\n","import React from 'react'\nimport { render } from 'react-dom'\nimport { Provider } from 'react-redux'\nimport { BrowserRouter } from 'react-router-dom'\n\nimport App from './components/App'\nimport store from './store/index'\n// css\nimport './assets/stylesheets/index.css'\n\nrender(\n  <Provider store={store}>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </Provider>,\n  document.getElementById('root')\n)\n"],"sourceRoot":""}